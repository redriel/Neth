package com.redriel.neth;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.3.0.
 */
public class SignUpRegistry extends Contract {
    private static final String BINARY = "60806040523480156200001157600080fd5b506040516040806200337083398101806040526200003391908101906200039f565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606060a0604051908101604052806001151581526020016001151581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200182815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600101556080820151816002019080519060200190620001e9929190620001f6565b5090505050505062000414565b8280548282559060005260206000209081019282156200024a579160200282015b8281111562000249578251829080519060200190620002389291906200025d565b509160200191906001019062000217565b5b509050620002599190620002e4565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002a057805160ff1916838001178555620002d1565b82800160010185558215620002d1579182015b82811115620002d0578251825591602001919060010190620002b3565b5b509050620002e0919062000315565b5090565b6200031291905b808211156200030e57600081816200030491906200033d565b50600101620002eb565b5090565b90565b6200033a91905b80821115620003365760008160009055506001016200031c565b5090565b90565b50805460018160011615610100020316600290046000825580601f1062000365575062000386565b601f01602090049060005260206000209081019062000385919062000315565b5b50565b600062000397825162000400565b905092915050565b60008060408385031215620003b357600080fd5b6000620003c38582860162000389565b9250506020620003d68582860162000389565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200040d82620003e0565b9050919050565b612f4c80620004246000396000f3fe6080604052600436106100b9576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806213eb4b146100be5780636d70f7ae146100fb578063ab2b3a8014610138578063b07048d914610161578063b14c925a1461018a578063b27a2fd9146101c7578063b3ab15fb14610204578063b47ae1321461022d578063b687e3c214610256578063e7e500091461027f578063f06bf019146102a8578063f9e60c30146102d1575b600080fd5b3480156100ca57600080fd5b506100e560048036036100e091908101906126a5565b61030e565b6040516100f29190612c18565b60405180910390f35b34801561010757600080fd5b50610122600480360361011d91908101906126a5565b610367565b60405161012f9190612c18565b60405180910390f35b34801561014457600080fd5b5061015f600480360361015a9190810190612735565b610418565b005b34801561016d57600080fd5b50610188600480360361018391908101906126a5565b610b20565b005b34801561019657600080fd5b506101b160048036036101ac9190810190612771565b610e92565b6040516101be9190612c18565b60405180910390f35b3480156101d357600080fd5b506101ee60048036036101e991908101906126ce565b610f58565b6040516101fb9190612c18565b60405180910390f35b34801561021057600080fd5b5061022b600480360361022691908101906126a5565b611277565b005b34801561023957600080fd5b50610254600480360361024f91908101906126ce565b61145f565b005b34801561026257600080fd5b5061027d600480360361027891908101906127c5565b61178e565b005b34801561028b57600080fd5b506102a660048036036102a191908101906126ce565b611cdb565b005b3480156102b457600080fd5b506102cf60048036036102ca9190810190612771565b611f75565b005b3480156102dd57600080fd5b506102f860048036036102f391908101906126a5565b612351565b6040516103059190612dda565b60405180910390f35b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff169050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1680156104115750600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff165b9050919050565b8181600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff161515156104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a390612dba565b60405180910390fd5b80156107cd576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900460ff161515610548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053f90612d7a565b60405180910390fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff161515156105da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d190612dba565b60405180910390fd5b606060a06040519081016040528086151581526020016001151581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200182815250600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160010155608082015181600201908051906020019061070c92919061242e565b5090505084156107c6576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16639870d7fe886040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016107929190612bfd565b600060405180830381600087803b1580156107ac57600080fd5b505af11580156107c0573d6000803e3d6000fd5b50505050505b5050610b1a565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061085857508060000160009054906101000a900460ff165b1515610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090612d7a565b60405180910390fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1615151561092b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092290612dba565b60405180910390fd5b606060a06040519081016040528086151581526020016001151581526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200182815250600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600101556080820151816002019080519060200190610a5d92919061242e565b509050508415610b17576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16639870d7fe886040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ae39190612bfd565b600060405180830381600087803b158015610afd57600080fd5b505af1158015610b11573d6000803e3d6000fd5b50505050505b50505b50505050565b80600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff161515610bb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba990612c9a565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1615610e8e576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610c9257508060000160009054906101000a900460ff165b1515610cd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cca90612d7a565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff161515610d64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5b90612d9a565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000160016101000a81548160ff0219169083151502179055508060000160009054906101000a900460ff1615610e8b576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663ac8a584a866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e579190612bfd565b600060405180830381600087803b158015610e7157600080fd5b505af1158015610e85573d6000803e3d6000fd5b50505050505b50505b5050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301826040518082805190602001908083835b602083101515610f0c5780518252602082019150602081019050602083039250610ee7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900460ff16905092915050565b6000610f638461030e565b8015610f745750610f738361030e565b5b8015610f865750610f858483610e92565b5b1561122857600073ffffffffffffffffffffffffffffffffffffffff16600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301836040518082805190602001908083835b60208310151561101b5780518252602082019150602081019050602083039250610ff6565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060030160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141580156112115750600073ffffffffffffffffffffffffffffffffffffffff16600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301836040518082805190602001908083835b602083101515611161578051825260208201915060208101905060208303925061113c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060030160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b1561121f5760019050611270565b60009050611270565b6000151561126b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126290612cfa565b60405180910390fd5b600090505b9392505050565b336000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900460ff16151561130e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130590612d7a565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16151561139f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139690612d9a565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160000160009054906101000a900460ff16151514151561143c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143390612d5a565b60405180910390fd5b60018160000160006101000a81548160ff02191690831515021790555050505050565b816000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806114eb57508060000160009054906101000a900460ff165b151561152c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152390612d7a565b60405180910390fd5b6115358561030e565b801561154657506115458461030e565b5b801561155857506115578584610e92565b5b15611743576060604051908101604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff16815260200184815250600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301846040518082805190602001908083835b60208310151561161d57805182526020820191506020810190506020830392506115f8565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060030160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061173a92919061248e565b50905050611787565b60001515611786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177d90612cba565b60405180910390fd5b5b5050505050565b826000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061181a57508060000160009054906101000a900460ff165b151561185b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185290612d7a565b60405180910390fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1615156118ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118e390612d3a565b60405180910390fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301846040518082805190602001908083835b602083101515611964578051825260208201915060208101905060208303925061193f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900460ff161515156119ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e190612d1a565b60405180910390fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201849080600181540180825580915050906001820390600052602060002001600090919290919091509080519060200190611a6792919061250e565b50506060604051908101604052806001151581526020018581526020013373ffffffffffffffffffffffffffffffffffffffff16815250600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301856040518082805190602001908083835b602083101515611b165780518252602082019150602081019050602083039250611af1565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001019080519060200190611b8592919061248e565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000815480929190600101919050555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663b723d0028688876040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ca193929190612c55565b600060405180830381600087803b158015611cbb57600080fd5b505af1158015611ccf573d6000803e3d6000fd5b50505050505050505050565b816000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611d6757508060000160009054906101000a900460ff165b1515611da8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9f90612d7a565b60405180910390fd5b611db18561030e565b8015611dc25750611dc18461030e565b5b8015611dd45750611dd38584610e92565b5b15611f2a57600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301836040518082805190602001908083835b602083101515611e515780518252602082019150602081019050602083039250611e2c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060030160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000611f23919061258e565b5050611f6e565b60001515611f6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6490612cfa565b60405180910390fd5b5b5050505050565b816000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061200157508060000160009054906101000a900460ff165b1515612042576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161203990612d7a565b60405180910390fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1615156120d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120ca90612d3a565b60405180910390fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301836040518082805190602001908083835b60208310151561214b5780518252602082019150602081019050602083039250612126565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900460ff1615156121d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c790612cda565b60405180910390fd5b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301846040518082805190602001908083835b60208310151561224a5780518252602082019150602081019050602083039250612225565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020905060008160000160006101000a81548160ff02191690831515021790555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16636ae75173866040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123179190612c33565b600060405180830381600087803b15801561233157600080fd5b505af1158015612345573d6000803e3d6000fd5b50505050505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1615156123e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123db90612d9a565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b82805482825590600052602060002090810192821561247d579160200282015b8281111561247c57825182908051906020019061246c92919061248e565b509160200191906001019061244e565b5b50905061248a91906125d6565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106124cf57805160ff19168380011785556124fd565b828001600101855582156124fd579182015b828111156124fc5782518255916020019190600101906124e1565b5b50905061250a9190612602565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061254f57805160ff191683800117855561257d565b8280016001018555821561257d579182015b8281111561257c578251825591602001919060010190612561565b5b50905061258a9190612602565b5090565b50805460018160011615610100020316600290046000825580601f106125b457506125d3565b601f0160209004906000526020600020908101906125d29190612602565b5b50565b6125ff91905b808211156125fb57600081816125f2919061258e565b506001016125dc565b5090565b90565b61262491905b80821115612620576000816000905550600101612608565b5090565b90565b60006126338235612ea1565b905092915050565b60006126478235612eb3565b905092915050565b600082601f830112151561266257600080fd5b813561267561267082612e22565b612df5565b9150808252602083016020830185838301111561269157600080fd5b61269c838284612ebf565b50505092915050565b6000602082840312156126b757600080fd5b60006126c584828501612627565b91505092915050565b6000806000606084860312156126e357600080fd5b60006126f186828701612627565b935050602061270286828701612627565b925050604084013567ffffffffffffffff81111561271f57600080fd5b61272b8682870161264f565b9150509250925092565b6000806040838503121561274857600080fd5b600061275685828601612627565b92505060206127678582860161263b565b9150509250929050565b6000806040838503121561278457600080fd5b600061279285828601612627565b925050602083013567ffffffffffffffff8111156127af57600080fd5b6127bb8582860161264f565b9150509250929050565b6000806000606084860312156127da57600080fd5b60006127e886828701612627565b935050602084013567ffffffffffffffff81111561280557600080fd5b6128118682870161264f565b925050604084013567ffffffffffffffff81111561282e57600080fd5b61283a8682870161264f565b9150509250925092565b61284d81612e59565b82525050565b61285c81612e6b565b82525050565b600061286d82612e4e565b808452612881816020860160208601612ece565b61288a81612f01565b602085010191505092915050565b6000603582527f556e207574656e746520636f6e206c27696e646972697a7a6f2073706563696660208301527f696361746f206e6f6e2065272070726573656e746500000000000000000000006040830152606082019050919050565b6000605182527f756e6f206f2070697520706172616d657472692068616e6e6f2076616c6f726560208301527f2065727261746f202861646472657373206e6f6e20636f727265747469206f2060408301527f68617368206e6f6e20636f726574746f290000000000000000000000000000006060830152608082019050919050565b6000601682527f51756573746f2068617368206e6f6e20657369737465000000000000000000006020830152604082019050919050565b6000602782527f756e6f206f2070697520706172616d657472692068616e6e6f2076616c6f726560208301527f2065727261746f000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601782527f51756573746f2068617368206769c3a0206573697374650000000000000000006020830152604082019050919050565b6000602782527f4e6f6e2065736973746520756e207574656e746520636f6e2071756573746f2060208301527f61646472657373000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000602382527f51756573746f206163636f756e7420c3a82067696120756e206f70657261746f60208301527f72652000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601382527f6e6f6e20736569206175746f72697a7a61746f000000000000000000000000006020830152604082019050919050565b6000603082527f556e207574656e746520636f6e206c27696e646972697a7a6f2073706563696660208301527f696361746f206e6f6e20657369737465000000000000000000000000000000006040830152606082019050919050565b6000603682527f556e207574656e746520636f6e206c27696e646972697a7a6f2073706563696660208301527f696361746f20652720676961272070726573656e7465000000000000000000006040830152606082019050919050565b612bf781612e97565b82525050565b6000602082019050612c126000830184612844565b92915050565b6000602082019050612c2d6000830184612853565b92915050565b60006020820190508181036000830152612c4d8184612862565b905092915050565b60006060820190508181036000830152612c6f8186612862565b9050612c7e6020830185612844565b8181036040830152612c908184612862565b9050949350505050565b60006020820190508181036000830152612cb381612898565b9050919050565b60006020820190508181036000830152612cd3816128f5565b9050919050565b60006020820190508181036000830152612cf381612978565b9050919050565b60006020820190508181036000830152612d13816129af565b9050919050565b60006020820190508181036000830152612d3381612a0c565b9050919050565b60006020820190508181036000830152612d5381612a43565b9050919050565b60006020820190508181036000830152612d7381612aa0565b9050919050565b60006020820190508181036000830152612d9381612afd565b9050919050565b60006020820190508181036000830152612db381612b34565b9050919050565b60006020820190508181036000830152612dd381612b91565b9050919050565b6000602082019050612def6000830184612bee565b92915050565b6000604051905081810181811067ffffffffffffffff82111715612e1857600080fd5b8060405250919050565b600067ffffffffffffffff821115612e3957600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b6000612e6482612e77565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612eac82612e77565b9050919050565b60008115159050919050565b82818337600083830152505050565b60005b83811015612eec578082015181840152602081019050612ed1565b83811115612efb576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a723058202220aa4e746ba0f0f7742228016742329c006e7ca022ce379bd805d4b1be6bb36c6578706572696d656e74616cf50037";

    public static final String FUNC_ISEXIST = "isExist";

    public static final String FUNC_ISOPERATOR = "isOperator";

    public static final String FUNC_ADDUSER = "addUser";

    public static final String FUNC_REMOVE_USER = "remove_user";

    public static final String FUNC_EXISTHASH = "existHash";

    public static final String FUNC_GETENDORSEMENT = "getEndorsement";

    public static final String FUNC_SETOPERATOR = "setOperator";

    public static final String FUNC_ADDENDORSEMENTS = "addEndorsements";

    public static final String FUNC_ADDDOCUMENT = "addDocument";

    public static final String FUNC_REMOVEENDORSEMENT = "removeEndorsement";

    public static final String FUNC_REMOVEDOCUMENT = "removeDocument";

    public static final String FUNC_GETDOCUMENTNUMBER = "getDocumentNumber";

    @Deprecated
    protected SignUpRegistry(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected SignUpRegistry(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected SignUpRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected SignUpRegistry(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<Boolean> isExist(String _user) {
        final Function function = new Function(FUNC_ISEXIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_user)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> isOperator(String _user) {
        final Function function = new Function(FUNC_ISOPERATOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_user)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> addUser(String _address, Boolean operator) {
        final Function function = new Function(
                FUNC_ADDUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address), 
                new org.web3j.abi.datatypes.Bool(operator)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> remove_user(String _address) {
        final Function function = new Function(
                FUNC_REMOVE_USER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> existHash(String user, String _hash) {
        final Function function = new Function(FUNC_EXISTHASH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(user), 
                new org.web3j.abi.datatypes.Utf8String(_hash)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> getEndorsement(String user, String user_give_like, String _hash) {
        final Function function = new Function(FUNC_GETENDORSEMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(user), 
                new org.web3j.abi.datatypes.Address(user_give_like), 
                new org.web3j.abi.datatypes.Utf8String(_hash)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> setOperator(String _address) {
        final Function function = new Function(
                FUNC_SETOPERATOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_address)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addEndorsements(String user, String user_give_like, String _hash) {
        final Function function = new Function(
                FUNC_ADDENDORSEMENTS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(user), 
                new org.web3j.abi.datatypes.Address(user_give_like), 
                new org.web3j.abi.datatypes.Utf8String(_hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> addDocument(String _user, String _hash, String eSK) {
        final Function function = new Function(
                FUNC_ADDDOCUMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_user), 
                new org.web3j.abi.datatypes.Utf8String(_hash), 
                new org.web3j.abi.datatypes.Utf8String(eSK)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> removeEndorsement(String user, String user_give_like, String _hash) {
        final Function function = new Function(
                FUNC_REMOVEENDORSEMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(user), 
                new org.web3j.abi.datatypes.Address(user_give_like), 
                new org.web3j.abi.datatypes.Utf8String(_hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> removeDocument(String _user, String _hash) {
        final Function function = new Function(
                FUNC_REMOVEDOCUMENT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_user), 
                new org.web3j.abi.datatypes.Utf8String(_hash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getDocumentNumber(String _user) {
        final Function function = new Function(FUNC_GETDOCUMENTNUMBER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_user)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    @Deprecated
    public static SignUpRegistry load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new SignUpRegistry(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static SignUpRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new SignUpRegistry(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static SignUpRegistry load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new SignUpRegistry(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static SignUpRegistry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new SignUpRegistry(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<SignUpRegistry> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String contractAcl, String contractOpereator) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(contractAcl), 
                new org.web3j.abi.datatypes.Address(contractOpereator)));
        return deployRemoteCall(SignUpRegistry.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<SignUpRegistry> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String contractAcl, String contractOpereator) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(contractAcl), 
                new org.web3j.abi.datatypes.Address(contractOpereator)));
        return deployRemoteCall(SignUpRegistry.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<SignUpRegistry> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String contractAcl, String contractOpereator) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(contractAcl), 
                new org.web3j.abi.datatypes.Address(contractOpereator)));
        return deployRemoteCall(SignUpRegistry.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<SignUpRegistry> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String contractAcl, String contractOpereator) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(contractAcl), 
                new org.web3j.abi.datatypes.Address(contractOpereator)));
        return deployRemoteCall(SignUpRegistry.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }
}
